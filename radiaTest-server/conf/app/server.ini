[database]
; database settings

; if use mysql/mariadb as database, pymysql should be stated
; e.g. SQLALCHEMY_DATABASE_URI = [dialect][+driver]://[username]:[password]@[host]/[db]

; pool size of database is directly relative to the concurrency limit.
; the size should be appropriate to the server performance,
; an excessive pool size will lead to worse performance 
; e.g. SQLALCHEMY_POOL_SIZE = 10240

[server]
; setting basic configs of radiaTest service
; setting basic configs of radiaTest service
; SERVER_ADDR = domain | [host_ip]:[nginx_listen]
; whether the server address/domain has been verified by valid Certification Authority
; CA_VERIFY = True | False
; radiaTest ca bundle certfile filepath. Necessary in any situation
; WARNING: make sure this path is valid
; CA_CERT = 
; setting the root directory of CA
; WARNINGï¼šmake sure this directory is valid
; CA_DIR = 

; setting server backend ip and port
; need setting as native Flask WsgiServer
; SERVER_IP = 
; SERVER_PORT =

[at]
; OPENQA_URL = 

[pkglist]
; OPENEULER_OFFICIAL_REPO_URL =
; OPENEULER_DAILYBUILD_REPO_URL = 
; PRODUCT_PKGLIST_PATH = 

[redis]
; setting redis as basic cache infrastructure for radiaTest service
; REDIS_HOST = 0.0.0.0
; REDIS_PORT = 6379
; REDIS_SECRET = radiaTest1234
; REDIS_DB = 11
; REDIS_SCRAPYSPIDER_DB = 5

[login]
; setting necessary configs for oauth services
; these configs work for common oauth login
; OAUTH_REDIRECT_URI =
; OAUTH_HOME_URL =
; OAUTH_GET_TOKEN_URL =
; OAUTH_CLIENT_ID =
; OAUTH_CLIENT_SECRET =
; OAUTH_GET_USER_INFO_URL =
; AUTHORITY = gitee

[token]
; setting to create user login token
; TOKEN_SECRET_KEY = xxxxxxxxxx
; the unit of expire time is second(s)
; TOKEN_EXPIRES_TIME = 1800
; the unit of login expire time is second(s)
; LOGIN_EXPIRES_TIME = 14400
; key of aes-decode
; WARNING: the aes key should be a hexademical string with 16, 24 or 32 bit
; AES_KEY = xxxxxxxxx
; setting access_token of radiaTest-bot(make sure gitee v5 api is reachable)
; V5_ACCESS_TOKEN = xxxxxxxxxx
; the unit of messenger expire time is second(s)
; MESSENGER_TOKEN_EXPIRES_TIME = 1800


[celery]
; setting the broker of celery worker
; we recommand use message queues as the broker, such as rabbitmq
; we do not ensure everything work normally as using redis or memcache
; warning: the broker of server we recommand to be deployed on localhost,
; becase it should be different to the ones used by workers

; e.g. BROKER_URL = amqp://radiaTest[:xxxxxx]@localhost:5672/radiaTest

; setting the result backend of celery worker
; only support redis

; e.g. RESULT_BACKEND = redis://[:xxxxxxxx]@[REDIS_HOST]:6379/10

; setting the crawl data backend of scrapyspider
; only support redis

; e.g. SCRAPYSPIDER = redis://[:xxxxxxxx]@[REDIS_HOST]:6379/5

; setting the pubsub broker for socketio broadcast message queue
; only support message queue, redis or memcache is forbidden
; e.g. SOCKETIO_PUBSUB = amqp://radiaTest[:xxxxxx]@localhost:5672/radiaTest

[administrator]
; setting to login with admin account
;ADMIN_USERNAME =
; at least 8 characters
;ADMIN_PASSWORD =
;set admin email address:when physical machine release and password change, it works.
;ADMIN_MAIL_ADDR =

[mail]
; setting the mail smtp server info
; When the virtual machine is about to be released, it works.
; warning: make sure you can connect mail smtp server.
; SMTP_SERVER = smtp.feishu.cn
; SMTP_PASSWD =
; SMTP_PORT = 587
; FROM_ADDR =
; TO_ADDR =

[public_user]
; setting the public user info
; Automatic login calls internal interface.
; warning: it's not necessary config.if you want to use it, you can config group or not.
; PUBLIC_USER_ID =
; PUBLIC_USER_ACCOUNT =
; PUBLIC_USER_ORG_NAME =
; PUBLIC_USER_GROUP =
; PUBLIC_TOKEN_EXPIRE_TIME =

[majun]
; setting majun paramas, majun_api and access_token
; MAJUN_API = majun.osinfra.cn/api/http/majun-basic-framework/ci-admin/radiatest/code
; MAJUN_ACCESS_TOKEN = xxxxxxxx

[report]
; setting test report path
; e.g. TEST_REPORT_PATH = /path/to/test_reports


[requirement]
; setting requirement path
; e.g. REQUIREMENT_ATTACHMENT_PATH = /path/to/requirements


[rpmcheck]
; setting rpmcheck path
; e.g. RPMCHECK_FILE_PATH = /path/to/rpmcheck
; setting number of rows in rpmcheck result, it must be greater than 0.
; e.g. RPMCHECK_RESULT_ROWS_NUM = 6
; setting rpmcheck result expires time
; e.g. RPMCHECK_RESULT_EXPIRES_TIME = 604800

[robot]
; setting a robot user for unauthorized api
; setting robot token
; e.g. ROBOT_AUTHORIZE = xxxxxxx
; setting encryption secret
; e.g. ROBOT_SHA256_SECRET = xxxxx
; setting request valid time interval
; e.g. TIMESTAMP_THRESHOLD = 5