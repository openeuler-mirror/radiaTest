# Copyright (c) [2022] Huawei Technologies Co.,Ltd.ALL rights reserved.
# You can use it according to the terms and conditions of the Mulan PSL v2.
#          http://license.coscl.org.cn/MulanPSL2
# THIS PROGRAM IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
# EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
# MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
# See the Mulan PSL v2 for more details.
# Part of codes were generated by scrapy startproject
####################################
# @Author  :
# @email   :
# @Date    : 2022/08/10 14:13:00
# @License : Mulan PSL v2
#####################################

import time

from server.schema.openqa import (
    OpenqaHomeItem,
    OpenqaGroupOverviewItem,
    OpenqaTestsOverviewItem
)


class RedisPipeline:
    def __init__(self, redis_client) -> None:
        self.db_conn = redis_client

    def process_item(self, item):
        if isinstance(item, OpenqaHomeItem):
            self.db_conn.set(
                "{}_group_overview_url".format(
                    item.product_name
                ),
                item.group_overview_url
            )

        elif isinstance(item, OpenqaGroupOverviewItem):
            _build_time_array = time.strptime(
                item.build_time, "%Y-%m-%dT%H:%M:%SZ"
            )
            _build_time_stamp = int(time.mktime(_build_time_array))

            self.db_conn.zadd(
                item.product_name,
                {
                    item.build_name: _build_time_stamp
                }
            )

            self.db_conn.set(
                "{}_{}_tests_overview_url".format(
                    item.product_name,
                    item.build_name
                ),
                item.build_tests_url
            )

        elif isinstance(item, OpenqaTestsOverviewItem):
            _key = "{}_{}".format(
                item.product_build,
                item.test,
            )
            self.db_conn.hset(
                _key,
                "aarch64_res_status",
                item.aarch64_res_status
            )
            self.db_conn.hset(_key, "aarch64_res_log", item.aarch64_res_log)
            self.db_conn.hset(
                _key,
                "aarch64_failedmodule_name",
                item.aarch64_failedmodule_name
            )
            self.db_conn.hset(
                _key,
                "aarch64_failedmodule_log",
                item.aarch64_failedmodule_log
            )
            self.db_conn.hset(
                _key,
                "aarch64_start_time",
                item.aarch64_start_time
            )
            self.db_conn.hset(
                _key,
                "aarch64_end_name",
                item.aarch64_end_name
            )
            self.db_conn.hset(
                _key,
                "aarch64_test_duration",
                item.aarch64_test_duration
            )

            self.db_conn.hset(
                _key,
                "x86_64_res_status",
                item.x86_64_res_status
            )
            self.db_conn.hset(_key, "x86_64_res_log", item.x86_64_res_log)
            self.db_conn.hset(
                _key,
                "x86_64_failedmodule_name",
                item.x86_64_failedmodule_name
            )
            self.db_conn.hset(
                _key,
                "x86_64_failedmodule_log",
                item.x86_64_failedmodule_log
            )
            self.db_conn.hset(
                _key,
                "x86_64_start_time",
                item.x86_64_start_time
            )
            self.db_conn.hset(
                _key,
                "x86_64_end_name",
                item.x86_64_end_name
            )
            self.db_conn.hset(
                _key,
                "x86_64_test_duration",
                item.x86_64_test_duration
            )
            aarch64_test_duration = int(item.aarch64_test_duration) if item.aarch64_test_duration != "-" else 0
            x86_64_test_duration = int(item.x86_64_test_duration) if item.x86_64_test_duration != "-" else 0
            self.db_conn.zadd(
                "product_build_test_set_{}".format(item.product_build),
                {item.test: aarch64_test_duration + x86_64_test_duration}
            )
